<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>software engineering on Continuous Hipsterism</title>
    <link>https://blog.joaoqalves.net/tags/software-engineering/</link>
    <description>Recent content in software engineering on Continuous Hipsterism</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 23 Feb 2016 20:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://blog.joaoqalves.net/tags/software-engineering/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>The casino paradox</title>
      <link>https://blog.joaoqalves.net/post/2016/02/23/The-casino-paradox/</link>
      <pubDate>Tue, 23 Feb 2016 20:00:00 +0000</pubDate>
      
      <guid>https://blog.joaoqalves.net/post/2016/02/23/The-casino-paradox/</guid>
      <description>It&amp;rsquo;s 2:37am and you already lost 3000$ in the casino. &amp;ldquo;Just put 1000$ more in this blackjack round&amp;rdquo; - said no one, ever. This is the same feeling I have many times in software engineering projects. I mean, yeah, I get it, 2 years ago you needed to spent the minimum amount of time possible to get the work done. That&amp;rsquo;s fine. You delivered, you got customers, everything went well.</description>
    </item>
    
    <item>
      <title>There are no free meals</title>
      <link>https://blog.joaoqalves.net/post/2016/02/20/There-are-no-free-meals/</link>
      <pubDate>Sat, 20 Feb 2016 19:00:00 +0000</pubDate>
      
      <guid>https://blog.joaoqalves.net/post/2016/02/20/There-are-no-free-meals/</guid>
      <description>Bob: &amp;ldquo;Hey, what will we use to communicate with X in this project?&amp;rdquo;
Ted: &amp;ldquo;We&amp;rsquo;re using library Y, of course! 5k stars at Github. Looks solid!&amp;rdquo;
(5 months later&amp;hellip;)
Bob: &amp;ldquo;Ted, we have a problem. We need to update X and library Y does not have support for it.&amp;rdquo;
Ted: &amp;ldquo;Hmmm&amp;hellip; We could just monkey-patch Y and then create our own in-house version. Problem solved!&amp;rdquo;
(and then it begins&amp;hellip;)</description>
    </item>
    
    <item>
      <title>Towards Continuous Deployment</title>
      <link>https://blog.joaoqalves.net/post/2015/10/14/Towards-Continuous-Deployment/</link>
      <pubDate>Wed, 14 Oct 2015 21:25:07 +0000</pubDate>
      
      <guid>https://blog.joaoqalves.net/post/2015/10/14/Towards-Continuous-Deployment/</guid>
      <description>Hi! This is my first post in this blog. Although it&amp;rsquo;s meant to be a tech blog, this post is the first part of a series where I mix software engineering, its practices and methodologies with a business background and why do software companies need to move towards continuous deployment. Stay tunned!
Background and Motivation The world has changed a lot in the last 100 years. But if we stop to think about it, did it change more from 1900 until 1970 or from 1970 until now?</description>
    </item>
    
  </channel>
</rss>